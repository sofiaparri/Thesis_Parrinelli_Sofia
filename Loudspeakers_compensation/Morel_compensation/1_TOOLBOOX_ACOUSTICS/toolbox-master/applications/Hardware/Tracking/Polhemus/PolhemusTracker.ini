#
#  ITADeviceDrivers - Eine dynamische Bibliothek für die Arbeit mit Endgeräten
#  (c) Copyright Institut für Technische Akustik (ITA) der RWTH Aachen
#
#  Beispiel Konfigurationsdatei für die Polhemus Motiontracker
#  Autor: Frank Wefers (Frank.Wefers@akustik.rwth-aachen.de)
#  Version: 5
#  Datum: 2012-03-27
#

#
#  Wichtig: Die Konfiguration muss im gleichen Arbeitsverzeichnis liegen
#  (Bei Matlab-Nutzung: Im Verzeichnis wo sich die Mex-Erweiterung ITADeviceDrivers.mexw32 befindet)
#

#
#  Hinweis: Alle angebenen Werte gelten für das VRLabor im ITA.
#

[Connection]

# Serielle Schnittstelle für die Tracker-Verbindung (COM1, COM2, ...)
Port = COM1

# Protokoll-Variante
# (LIBERTY = Großer 4-Kanal Tracker im ITA,
#  PATRIOT = Kleiner 2-Kanal Tracker aus dem Rechenzentrum)
Protocol = PATRIOT

VistaDriverPluginsDllPath = win64/DriverPlugins

[Coords]

# Nullpunkt des logischen Koordinatensystems ausgedrückt in physikalischen Koordinaten des Trackers.
# Diese Einstellung wird benutzt um den allgemeinen Bezugspunkt (Nullpunkt) im VRLabor zu definieren.

Null = -0.372, -2.207, -0.149

# Hemisphere (Halbkugel) festlegen in der getrackt wird. Es kann immer nur eine Hemisphere korrekt getrackt werden!
# UP = Hemisphere gegenüber der Seite der Anschraubung (wenn Anschraubung unter dem Sender => UP = darüber)
# DOWN = Hemisphere auf der Seite der Anschraubung (wenn Anschraubung unter dem Sender => DOWN = darunter)
Hemisphere = UP


[Sensor1]

#
#  Hinweis: Im VRLabor liegt der Kopf auf Sensor 1, welcher an der Brille montiert ist.
#

# Yaw Pitch Roll [°]
Rotation = 0.00, 96.00, 0.00

# Translation [m]
Translation = +0.000, -0.030, +0.140


[Sensor2]

# Rotation (Yaw, Pitch, Roll)  [°]
Rotation = 0.00, 0.00, 0.00

# Translation [m]
Translation = +0.000, +0.000, +0.000

[Sensor3]

# Rotation (Yaw, Pitch, Roll)  [°]
Rotation = 0.00, 0.00, 0.00

# Translation [m]
Translation = +0.000, +0.000, +0.000

[Sensor4]

# Rotation (Yaw, Pitch, Roll)  [°]
Rotation = 0.00, 6.00, 0.00

# Translation [m]
Translation = +0.000, +0.000, +0.000


[Distortion]

# Festlegen ob die Entzerrung aktiviert ist oder nicht.
Active = False

# Die Datei die die Entzerrungsdaten des Trackers enthält.
Filename = distortion_Liberty_VRLabor.csv

# --= Sensor-Transformationen =--

# Jeder Sensor kann mit einer eigenen Translation verschoben und durch eine Orientierung (Rotation in Yaw, Pitch, Roll Winkeln)
# im lokalen Koordinatensystem (reference frame) des Sensors gedreht werden.
# Hierbei ist folgendes zu beachten:
#
#
# Zunächst wird die Orientierung des Sensors anhand der angegebenen Yaw/Pitch/Roll-Winkel korregiert.
# Danach wird der Sensor innerhalb dieses rotierten lokalen Koordinatensystems verschoben.
#
# Die angegebenen Drehwinkel geben an, wie die vom Tracker erhaltene Orientierung des Sensors gedreht werden
# muss, um die gewünschte logische Position zu erhalten. Beispiel: Realer Sensor zeigt nach unten. Pitch=+90° dreht
# in logisch auf Null (View nach vorne)
# Die Translation bezieht sich auf das gedrehte Koordinatensystem und beschreibt die Position des logischen Sensors
# in diesem (Beispiel: +1,0,0 verschiebt den logischen Sensor um einen Meter nach rechts zum physikalischen, rotierten Trackerdatum)
#
#
#
# Anmerkung zu Yaw-Pitch-Roll Rotationen:
#
# Diese Konvention zu 3D-Rotationen wird n vielen 3D-Programmen benutzt und findet Anwendung in der
# Flugzeug-Navigation. Hier werden kurz die einzelnen Winkel erläutert.
# 
#   - Yaw (Gier-Winkel) dreht rechtshändig um die Oben-Achse des Objektes
#   - Pitch (Neige-Winkel) dreht rechtshändig um die Rechts-Achse des Objektes (Kreuzprodukt aus View x Up)
#   - Roll (Roll-Winkel) dreht rechthändig um die Front-Achse des Objektes
#
#  Beachte: Bei allen Einzel-Rotationen wird der Referenzrahmen mitgedreht.
#
#  Bei weiteren Fragen: Frank Wefers (fwe@akustik.rwth-aachen.de)
# 
