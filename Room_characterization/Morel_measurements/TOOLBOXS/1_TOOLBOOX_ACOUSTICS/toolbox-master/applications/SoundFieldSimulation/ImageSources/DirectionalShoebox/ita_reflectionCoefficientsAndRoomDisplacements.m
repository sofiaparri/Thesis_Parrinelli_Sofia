function state = ita_reflectionCoefficientsAndRoomDisplacements(params,state,dirs)
% Noam Shabtai
% Institution of Technical Acoustics
% RWTH Aachen
% nsh@akustik.rwth-aachen.de
% 24.7.2014

switch params.stages.reflection_coefficients_and_room_displacements
case 0
    return;
case 1
    if params.display.headers disp('Setting reflection coefficients and room displacements...');end
    L = params.wall.length;

    num_of_images = state.num_of_images;
    num_of_x_images = state.num_of_x_images;
    num_of_y_images = state.num_of_y_images;
    num_of_z_images = state.num_of_z_images;
    num_of_x_indices = state.num_of_x_indices;
    num_of_y_indices = state.num_of_y_indices;
    num_of_z_indices = state.num_of_z_indices;
    reflection_coefficient_power_vector_yz_x_0  = state.reflection_coefficient_power_vector_yz_x_0;
    reflection_coefficient_power_vector_yz_x_Lx = state.reflection_coefficient_power_vector_yz_x_Lx;
    reflection_coefficient_power_vector_xz_y_0  = state.reflection_coefficient_power_vector_xz_y_0;
    reflection_coefficient_power_vector_xz_y_Ly = state.reflection_coefficient_power_vector_xz_y_Ly;
    reflection_coefficient_power_vector_xy_z_0  = state.reflection_coefficient_power_vector_xy_z_0;
    reflection_coefficient_power_vector_xy_z_Lz = state.reflection_coefficient_power_vector_xy_z_Lz;

    image_index = (1:num_of_images)';

    x_room_index = mod(image_index-1,num_of_x_indices)+1-num_of_x_images;
    y_room_index = mod(floor((image_index-1)/num_of_x_indices),num_of_y_indices)+1-num_of_y_images;
    z_room_index = floor((image_index-1)/(num_of_x_indices*num_of_y_indices))+1-num_of_z_images;

    image_indices_in_sphere = find(( (x_room_index/num_of_x_images).^2 +...
                                     (y_room_index/num_of_y_images).^2 +...
                                     (z_room_index/num_of_z_images).^2) <1);
    x_room_index = x_room_index(image_indices_in_sphere);
    y_room_index = y_room_index(image_indices_in_sphere);
    z_room_index = z_room_index(image_indices_in_sphere);

    room_displacements = 2 * [x_room_index*L.x, y_room_index*L.y, z_room_index*L.z];
    num_of_rooms = length(image_indices_in_sphere);
      
    reflection_coefficients_from_source =...
         reflection_coefficient_power_vector_yz_x_0(1+abs(x_room_index))    .*...
         reflection_coefficient_power_vector_yz_x_Lx(1+abs(x_room_index))   .*...
         reflection_coefficient_power_vector_xz_y_0(1+abs(y_room_index))    .*...
         reflection_coefficient_power_vector_xz_y_Ly(1+abs(y_room_index))   .*...
         reflection_coefficient_power_vector_xy_z_0(1+abs(z_room_index))    .*...
         reflection_coefficient_power_vector_xy_z_Lz(1+abs(z_room_index));  
    reflection_coefficients_from_left_image =...
         reflection_coefficient_power_vector_yz_x_0(1+abs(x_room_index-1))  .*...
         reflection_coefficient_power_vector_yz_x_Lx(1+abs(x_room_index))   .*...
         reflection_coefficient_power_vector_xz_y_0(1+abs(y_room_index))    .*...
         reflection_coefficient_power_vector_xz_y_Ly(1+abs(y_room_index))   .*...
         reflection_coefficient_power_vector_xy_z_0(1+abs(z_room_index))    .*...
         reflection_coefficient_power_vector_xy_z_Lz(1+abs(z_room_index));
    reflection_coefficients_from_bottom_image =...
         reflection_coefficient_power_vector_yz_x_0(1+abs(x_room_index))    .*...
         reflection_coefficient_power_vector_yz_x_Lx(1+abs(x_room_index))   .*...
         reflection_coefficient_power_vector_xz_y_0(1+abs(y_room_index-1))  .*...
         reflection_coefficient_power_vector_xz_y_Ly(1+abs(y_room_index))   .*...
         reflection_coefficient_power_vector_xy_z_0(1+abs(z_room_index))    .*...
         reflection_coefficient_power_vector_xy_z_Lz(1+abs(z_room_index)); 
    reflection_coefficients_from_backward_image =...
         reflection_coefficient_power_vector_yz_x_0(1+abs(x_room_index))    .*...
         reflection_coefficient_power_vector_yz_x_Lx(1+abs(x_room_index))   .*...
         reflection_coefficient_power_vector_xz_y_0(1+abs(y_room_index))    .*...
         reflection_coefficient_power_vector_xz_y_Ly(1+abs(y_room_index))   .*...
         reflection_coefficient_power_vector_xy_z_0(1+abs(z_room_index-1))  .*...
         reflection_coefficient_power_vector_xy_z_Lz(1+abs(z_room_index));
    reflection_coefficients_from_left_bottom_image =...
         reflection_coefficient_power_vector_yz_x_0(1+abs(x_room_index-1))  .*...
         reflection_coefficient_power_vector_yz_x_Lx(1+abs(x_room_index))   .*...
         reflection_coefficient_power_vector_xz_y_0(1+abs(y_room_index-1))  .*...
         reflection_coefficient_power_vector_xz_y_Ly(1+abs(y_room_index))   .*...
         reflection_coefficient_power_vector_xy_z_0(1+abs(z_room_index))    .*...
         reflection_coefficient_power_vector_xy_z_Lz(1+abs(z_room_index));
    reflection_coefficients_from_left_backward_image =...
         reflection_coefficient_power_vector_yz_x_0(1+abs(x_room_index-1))  .*...
         reflection_coefficient_power_vector_yz_x_Lx(1+abs(x_room_index))   .*...
         reflection_coefficient_power_vector_xz_y_0(1+abs(y_room_index))    .*...
         reflection_coefficient_power_vector_xz_y_Ly(1+abs(y_room_index))   .*...
         reflection_coefficient_power_vector_xy_z_0(1+abs(z_room_index-1))  .*...
         reflection_coefficient_power_vector_xy_z_Lz(1+abs(z_room_index));
    reflection_coefficients_from_bottom_backward_image =...
         reflection_coefficient_power_vector_yz_x_0(1+abs(x_room_index))    .*...
         reflection_coefficient_power_vector_yz_x_Lx(1+abs(x_room_index))   .*...
         reflection_coefficient_power_vector_xz_y_0(1+abs(y_room_index-1))  .*...
         reflection_coefficient_power_vector_xz_y_Ly(1+abs(y_room_index))   .*...
         reflection_coefficient_power_vector_xy_z_0(1+abs(z_room_index-1))  .*...
         reflection_coefficient_power_vector_xy_z_Lz(1+abs(z_room_index));
    reflection_coefficients_from_left_bottom_backward_image =...
         reflection_coefficient_power_vector_yz_x_0(1+abs(x_room_index-1))  .*...
         reflection_coefficient_power_vector_yz_x_Lx(1+abs(x_room_index))   .*...
         reflection_coefficient_power_vector_xz_y_0(1+abs(y_room_index-1))  .*...
         reflection_coefficient_power_vector_xz_y_Ly(1+abs(y_room_index))   .*...
         reflection_coefficient_power_vector_xy_z_0(1+abs(z_room_index-1))  .*...
         reflection_coefficient_power_vector_xy_z_Lz(1+abs(z_room_index));

    reflection_coefficients = [...
    reflection_coefficients_from_source;...
    reflection_coefficients_from_left_image;...
    reflection_coefficients_from_bottom_image;...
    reflection_coefficients_from_backward_image;...
    reflection_coefficients_from_left_bottom_image;...
    reflection_coefficients_from_left_backward_image;...
    reflection_coefficients_from_bottom_backward_image;...
    reflection_coefficients_from_left_bottom_backward_image;...
    ];

    if params.mode.save_intermediate_results
        save(fullfile(dirs.parent_dir,dirs.mat_dir,...
                      dirs.reflection_coefficients_filename),...
             'reflection_coefficients','room_displacements','num_of_rooms');
    end
case 2
    if params.display.headers disp('Loading reflection coefficients and room displacements...');end
    load(fullfile(dirs.parent_dir,dirs.mat_dir,...
                  dirs.reflection_coefficients_filename),...
         'reflection_coefficients','room_displacements','num_of_rooms');
end

state.reflection_coefficients = reflection_coefficients;
state.room_displacements = room_displacements;
state.num_of_rooms = num_of_rooms;
