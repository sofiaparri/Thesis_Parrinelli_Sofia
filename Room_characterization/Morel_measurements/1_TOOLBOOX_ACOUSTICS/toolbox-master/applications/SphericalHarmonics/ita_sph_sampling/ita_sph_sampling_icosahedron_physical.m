function varargout = ita_sph_sampling_icosahedron_physical(varargin)
%ITA_SPH_SAMPLING_ICOSAHEDRON - Icosahedron sampling
%  This function returns the physical sampling of the ke4 icosahedron
%  microphone array.
%
%  Syntax:
%   sampling = ita_sph_sampling_icosahedron_physical()
%
%  Example:
%   sampling = ita_sph_sampling_icosahedron_physical()
%
%  See also:
%	ita_sph_sampling, ita_sph_base, ita_sph_sampling_icosahedron
%
%   Reference page in Help browser 
%        <a href="matlab:doc ita_sph_sampling_icosahedron_physical">doc ita_sph_sampling_icosahedron_physical</a>

% <ITA-Toolbox>
% This file is part of the ITA-Toolbox. Some rights reserved. 
% You can find the license for this m-file in the license.txt file in the ITA-Toolbox folder. 
% </ITA-Toolbox>


% Author: Marco Berzborn -- Email: marco.berzborn@akustik.rwth-aachen.de
% Created:  02-Nov-2017 

theta = [1.565269801525254, ...
         2.294997457752220, ...
         1.226592351686568, ...
         1.226592351686568, ...
         1.696605844149543, ...
         2.409088979442091, ...
         2.409088979442090, ...
         1.696605844149543, ...
         0.506378251408914, ...
         0.506378251408914, ...
         2.635214402180879, ...
         1.444986809440250, ...
         0.732503674147703, ...
         0.732503674147703, ...
         1.444986809440250, ...
         2.635214402180879, ...
         1.915000301903226, ...
         0.846595195837573, ...
         1.915000301903225, ...
         1.576322852064539];
     
phi = [0.000000000000000, ...
       6.283185307179586, ...
       0.660263824203969, ...
       5.622921482975618, ...
       5.055791576545843, ...
       5.241315660913181, ...
       1.041869646266405, ...
       1.227393730633743, ...
       0.826693168093822, ...
       5.456492139085764, ...
       3.968285821683615, ...
       4.368986384223536, ...
       4.183462299856198, ...
       2.099723007323388, ...
       1.914198922956050, ...
       2.314899485495971, ...
       2.481328829385824, ...
       3.141592653589793, ...
       3.801856477793762, ...
       3.141592653589793];

positions = [0.065 * ones(20,1), theta.', phi.'];
sampling = itaSamplingSph(positions, 'sph');
sampling.nmax = 3;

varargout{1} = sampling;
end